aliases:
  - &restore-go-cache
    keys:
      - go-mod-v2-{{ checksum "go.sum" }}

  - &save-go-cache
    paths:
      - /go/pkg/mod
    key: go-mod-v2-{{ checksum "go.sum" }}

  - &restore-node-cache
    keys:
      - go-node-v1-{{ checksum "package-lock.json" }}

  - &save-node-cache
    paths:
      - /node-modules
    key: go-node-v1-{{ checksum "package-lock.json" }}

  - &filter-master
    branches:
      only: master

  - &filter-tag
    branches:
      only: master

version: 2.1

jobs:
  test-front: # Running tests for frontend
    working_directory: ~/monitoror/front
    docker:
      - image: circleci/node:10
    steps:
      - checkout:
          path: ~/monitoror

      # Download the dependencies and cache them
      - restore_cache: *restore-node-cache
      - run:
          name: "Install dependencies"
          command: yarn install
      - save_cache: *save-node-cache

      - run:
          name: "Execute tests and coverage"
          command: yarn run test

      - run:
          name: "Uploading code coverage"
          command: bash <(curl -s https://codecov.io/bash) -cF front

  test-back: # Running tests for backend
    working_directory: ~/monitoror
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout

      # Download the dependencies and cache them
      - restore_cache: *restore-go-cache
      - run:
          name: "Install dependencies"
          command: |
            go get gotest.tools/gotestsum
            make install
      - save_cache: *save-go-cache

      - run:
          name: "Execute tests and coverage"
          command: make test-coverage

      - run:
          name: "Uploading code coverage"
          command: bash <(curl -s https://codecov.io/bash) -cF back

  build-front: # Building monitoror front
    working_directory: ~/monitoror/front
    docker:
      - image: circleci/node:10
    steps:
      - checkout:
          path: ~/monitoror

      # Download the dependencies and cache them
      - restore_cache: *restore-node-cache
      - run:
          name: "Install dependencies"
          command: yarn install
      - save_cache: *save-node-cache

      - run:
          name: "Build/Pack front"
          command: yarn run build

      - persist_to_workspace:
          root: .
          paths:
            - "dist/*"

  build-back: # Building monitoror for all targets
    working_directory: ~/monitoror
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - attach_workspace:
          at: front

      - restore_cache: *restore-go-cache
      - run:
          name: "Install dependencies"
          command: make install
      - save_cache: *save-go-cache

      - run:
          name: "Build all target"
          command: |
            go get github.com/GeertJohan/go.rice/rice
            make build-all

      - store_artifacts:
          path: output

      - persist_to_workspace:
          root: .
          paths:
            - "output/monitoror-*"

  deploy-binaries: # Deploy binaries
    working_directory: ~/monitoror
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - attach_workspace:
          at: .

      - restore_cache: *restore-go-cache
      - run:
          name: "Publish Release on GitHub"
          command: ./.circleci/release-on-github
      - save_cache: *save-go-cache

workflows:
  version: 2
  test-build:
    jobs:
      - test-front
      - test-back
      - build-front:
          requires:
            - test-front
          filters: *filter-master
      - build-back:
          requires:
            - test-back
            - build-front
          filters: *filter-master
  test-build-deploy:
    jobs:
      - test-front:
          filters: *filter-tag
      - test-back:
          filters: *filter-tag
      - build-front:
          requires:
            - test-front
          filters: *filter-tag
      - build-back:
          requires:
            - test-back
            - build-front
          filters: *filter-tag
      - deploy-binaries:
          requires:
            - build-back
          filters: *filter-tag
