// Code generated by mockery v1.0.0. DO NOT EDIT.

// If you want to rebuild this file, make mock-pkg

package mocks

import gojenkins "github.com/jsdidierlaurent/golang-jenkins"
import mock "github.com/stretchr/testify/mock"

// Jenkins is an autogenerated mock type for the Jenkins type
type Jenkins struct {
	mock.Mock
}

// GetBuildByJobId provides a mock function with given fields: jobId, number
func (_m *Jenkins) GetBuildByJobId(jobId string, number int) (gojenkins.Build, error) {
	ret := _m.Called(jobId, number)

	var r0 gojenkins.Build
	if rf, ok := ret.Get(0).(func(string, int) gojenkins.Build); ok {
		r0 = rf(jobId, number)
	} else {
		r0 = ret.Get(0).(gojenkins.Build)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(jobId, number)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetJob provides a mock function with given fields: jobName
func (_m *Jenkins) GetJob(jobName string) (gojenkins.Job, error) {
	ret := _m.Called(jobName)

	var r0 gojenkins.Job
	if rf, ok := ret.Get(0).(func(string) gojenkins.Job); ok {
		r0 = rf(jobName)
	} else {
		r0 = ret.Get(0).(gojenkins.Job)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(jobName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastBuildByJobId provides a mock function with given fields: jobId
func (_m *Jenkins) GetLastBuildByJobId(jobId string) (gojenkins.Build, error) {
	ret := _m.Called(jobId)

	var r0 gojenkins.Build
	if rf, ok := ret.Get(0).(func(string) gojenkins.Build); ok {
		r0 = rf(jobId)
	} else {
		r0 = ret.Get(0).(gojenkins.Build)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(jobId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
