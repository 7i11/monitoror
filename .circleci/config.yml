version: 2.1

jobs:
  test-front: # Running tests for frontend
    working_directory: ~/monitoror/front
    docker:
      - image: circleci/node:10
    steps:
      - checkout:
          path: ~/monitoror

      # Download the dependencies and cache them
      - restore_cache:
          keys:
            - node-mod-v1-{{ checksum "package.json" }}
      - run:
          name: "Install dependencies"
          command: npm install
      - save_cache:
          key: node-mod-v1-{{ checksum "package.json" }}
          paths:
            - "node_modules"

      - run:
          name: "Execute tests and coverage"
          command: npm run test

      - run:
          name: "Uploading code coverage"
          command: bash <(curl -s https://codecov.io/bash) -cF front

  test-back: # Running tests for backend
    working_directory: ~/monitoror
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout

      # Download the dependencies and cache them
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: "Install dependencies"
          command: make install
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg"
            -
      - run:
          name: "Execute tests and coverage"
          command: make test-coverage

      - run:
          name: "Uploading code coverage"
          command: bash <(curl -s https://codecov.io/bash) -cF back

  build-front: # Building monitoror front
    working_directory: ~/monitoror/front
    docker:
      - image: circleci/node:10
    steps:
      - checkout:
          path: ~/monitoror

      # Download the dependencies and cache them
      - restore_cache:
          keys:
            - node-mod-v1-{{ checksum "package.json" }}
      - run:
          name: "Install dependencies"
          command: npm install
      - save_cache:
          key: node-mod-v1-{{ checksum "package.json" }}
          paths:
            - "node_modules"

      - run:
          name: "Build/Pack front"
          command: npm run prod

      - persist_to_workspace:
          root: ./dist
          paths:
            - "*"

  build-back: # Building monitoror for all targets
    working_directory: ~/monitoror
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - attach_workspace:
          at: front/dist

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: "Install dependencies"
          command: make install
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg"

      - run:
          name: "Build all target"
          command: |
            ls front/output
            make build-all

      - store_artifacts:
          path: output

      - persist_to_workspace:
          root: ./output
          paths:
            - "monitoror-*"

  deploy-binaries: # Deploy binaries
    working_directory: ~/monitoror
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ./.circleci/release-on-github

workflows:
  version: 2
  monitoror-pipeline:
    jobs:
      - test-front
      - test-back
      - build-front:
          requires:
            - test-front
          filters:
            branches:
              only: master
      - build-back:
          requires:
            - test-back
            - build-front
          filters:
            branches:
              only: master
      - deploy-binaries:
          requires:
            - build-back
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
